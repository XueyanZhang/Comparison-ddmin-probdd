======================Reduction starts======================

The spar tree is the following.
crate {id=1}
|___(*) {id=3,slot_type=[mod_body,kleene_star__mod_body_2]}
    |___fn_decl {id=8,slot_type=[item,altnt_block__item_7,aux_rule__item_8,pub_item,fn_decl]}
        |___fn_head {id=9,slot_type=fn_head}
        |   |___Token:fn {id=73,slot_type=Token}
        |   |___Token:main {id=75,slot_type=[ident,Ident]}
        |___Token:( {id=10,slot_type=Token}
        |___Token:) {id=11,slot_type=Token}
        |___block_with_inner_attrs {id=12,slot_type=block_with_inner_attrs}
            |___Token:{ {id=13,slot_type=Token}
            |___(*) {id=14,slot_type=kleene_star__block_with_inner_attrs_2}
            |   |___macro_invocation_semi {id=57,slot_type=[stmt,item,altnt_block__item_7,macro_invocation_semi]}
            |   |   |___Token:println {id=72,slot_type=[simple_path,simple_path_segment,ident,Ident]}
            |   |   |___Token:! {id=59,slot_type=Token}
            |   |   |___aux_rule__macro_invocation_semi_7 {id=61,slot_type=[altnt_block__macro_invocation_semi_4,aux_rule__macro_invocation_semi_7]}
            |   |       |___aux_rule__macro_invocation_semi_8 {id=64,slot_type=[altnt_block__macro_invocation_semi_5,aux_rule__macro_invocation_semi_8]}
            |   |       |   |___Token:( {id=65,slot_type=Token}
            |   |       |   |___(*) {id=66,slot_type=kleene_star__inner_attr_1}
            |   |       |   |   |___Token:"ingress" {id=69,slot_type=[tt,StringLit]}
            |   |       |   |___Token:) {id=67,slot_type=Token}
            |   |       |___Token:; {id=63,slot_type=Token}
            |   |___macro_invocation_semi {id=39,slot_type=[stmt,item,altnt_block__item_7,macro_invocation_semi]}
            |   |   |___Token:println {id=54,slot_type=[simple_path,simple_path_segment,ident,Ident]}
            |   |   |___Token:! {id=41,slot_type=Token}
            |   |   |___aux_rule__macro_invocation_semi_7 {id=43,slot_type=[altnt_block__macro_invocation_semi_4,aux_rule__macro_invocation_semi_7]}
            |   |       |___aux_rule__macro_invocation_semi_8 {id=46,slot_type=[altnt_block__macro_invocation_semi_5,aux_rule__macro_invocation_semi_8]}
            |   |       |   |___Token:( {id=47,slot_type=Token}
            |   |       |   |___(*) {id=48,slot_type=kleene_star__inner_attr_1}
            |   |       |   |   |___Token:"hello_world" {id=51,slot_type=[tt,StringLit]}
            |   |       |   |___Token:) {id=49,slot_type=Token}
            |   |       |___Token:; {id=45,slot_type=Token}
            |   |___macro_invocation_semi {id=21,slot_type=[stmt,item,altnt_block__item_7,macro_invocation_semi]}
            |       |___Token:println {id=36,slot_type=[simple_path,simple_path_segment,ident,Ident]}
            |       |___Token:! {id=23,slot_type=Token}
            |       |___aux_rule__macro_invocation_semi_7 {id=25,slot_type=[altnt_block__macro_invocation_semi_4,aux_rule__macro_invocation_semi_7]}
            |           |___aux_rule__macro_invocation_semi_8 {id=28,slot_type=[altnt_block__macro_invocation_semi_5,aux_rule__macro_invocation_semi_8]}
            |           |   |___Token:( {id=29,slot_type=Token}
            |           |   |___(*) {id=30,slot_type=kleene_star__inner_attr_1}
            |           |   |   |___Token:"egress" {id=33,slot_type=[tt,StringLit]}
            |           |   |___Token:) {id=31,slot_type=Token}
            |           |___Token:; {id=27,slot_type=Token}
            |___Token:} {id=15,slot_type=Token}
------------------------------------------------------------


==================Reducing node 3, size=24==================

The current best program is the following

    fn main() {
                                  println!("ingress");
    println!("hello_world");
             println!("egress");
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 3
------------------------------------------------------------


==================Reducing node 8, size=24==================

The current best program is the following

    fn main() {
                                  println!("ingress");
    println!("hello_world");
             println!("egress");
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=8}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    println!("ingress");
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    println!("hello_world");
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    println!("egress");
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 12, size=24==================

The current best program is the following

    fn main() {
                                  println!("ingress");
    println!("hello_world");
             println!("egress");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 14, size=24==================

The current best program is the following

    fn main() {
                                  println!("ingress");
    println!("hello_world");
             println!("egress");
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@3
    fn main() {
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star]dd@1
    fn main() {
                                  println!("ingress");
    println!("hello_world");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 5 --> 4.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 6
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    fn main() {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    fn main() {
                                  println!("ingress");
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star]dd@1
    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 5 --> 3.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 3
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 14 from 24 to 12
------------------------------------------------------------


=================Reducing node 39, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    fn main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 39
------------------------------------------------------------


=================Reducing node 43, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 43
------------------------------------------------------------


=================Reducing node 46, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 46
------------------------------------------------------------


==================Reducing node 9, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 75, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 75
------------------------------------------------------------


=================Reducing node 73, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 73
------------------------------------------------------------


=================Reducing node 54, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 54
------------------------------------------------------------


=================Reducing node 49, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 49
------------------------------------------------------------


=================Reducing node 48, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    fn main() {
    println!(             );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 48
------------------------------------------------------------


=================Reducing node 51, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51
------------------------------------------------------------


=================Reducing node 47, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 47
------------------------------------------------------------


=================Reducing node 45, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 45
------------------------------------------------------------


=================Reducing node 41, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 41
------------------------------------------------------------


=================Reducing node 15, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 13, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 11, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 10, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


==================Reducing node 3, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 3
------------------------------------------------------------


==================Reducing node 8, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=8}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    println!("hello_world");
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 12, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 14, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    fn main() {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 14
------------------------------------------------------------


=================Reducing node 19, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=19}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 23, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 23
------------------------------------------------------------


=================Reducing node 26, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 26
------------------------------------------------------------


==================Reducing node 9, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 9
------------------------------------------------------------


=================Reducing node 37, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 37
------------------------------------------------------------


=================Reducing node 35, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 35
------------------------------------------------------------


=================Reducing node 34, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 34
------------------------------------------------------------


=================Reducing node 29, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 29
------------------------------------------------------------


=================Reducing node 28, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    fn main() {
    println!(             );
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 28
------------------------------------------------------------


=================Reducing node 31, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 31
------------------------------------------------------------


=================Reducing node 27, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 27
------------------------------------------------------------


=================Reducing node 25, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 25
------------------------------------------------------------


=================Reducing node 21, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 15, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 13, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 11, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 10, size=12==================

The current best program is the following

    fn main() {
    println!("hello_world");
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


#test success = 2
#test failure = 7
#test result cache hits = 6
#test execution cancelled = 0
#node edit action set cache hits = 3
