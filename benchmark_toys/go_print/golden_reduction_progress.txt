======================Reduction starts======================

The spar tree is the following.
(|:sourceFile) {id=1}
|___aux_rule__sourceFile_5 {id=2,slot_type=aux_rule__sourceFile_5}
    |___packageClause {id=3,slot_type=packageClause}
    |   |___Token:package {id=286,slot_type=PACKAGE}
    |   |___Token:main {id=287,slot_type=IDENTIFIER}
    |___Token:; {id=285,slot_type=[eos,SEMI]}
    |___(*) {id=5,slot_type=kleene_star__sourceFile_2}
    |   |___aux_rule__sourceFile_1 {id=276,slot_type=aux_rule__sourceFile_1}
    |       |___importDecl {id=277,slot_type=importDecl}
    |       |   |___Token:import {id=280,slot_type=IMPORT}
    |       |   |___Token:"fmt" {id=284,slot_type=[importSpec,importPath,string_,INTERPRETED_STRING_LIT]}
    |       |___Token:; {id=279,slot_type=[eos,SEMI]}
    |___(*) {id=6,slot_type=kleene_star__sourceFile_4}
        |___aux_rule__sourceFile_3 {id=7,slot_type=aux_rule__sourceFile_3}
            |___functionDecl {id=8,slot_type=functionDecl}
            |   |___Token:func {id=11,slot_type=FUNC}
            |   |___Token:main {id=12,slot_type=IDENTIFIER}
            |   |___parameters {id=273,slot_type=[signature,parameters]}
            |   |   |___Token:( {id=274,slot_type=L_PAREN}
            |   |   |___Token:) {id=275,slot_type=R_PAREN}
            |   |___(?) {id=14,slot_type=optional__functionDecl_1}
            |       |___block {id=15,slot_type=block}
            |           |___Token:{ {id=16,slot_type=L_CURLY}
            |           |___(?) {id=17,slot_type=optional__block_1}
            |           |   |___(+) {id=19,slot_type=statementList}
            |           |       |___aux_rule__statementList_2 {id=233,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=241,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=272,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=243,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=268,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=269,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=270,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=246,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=247,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=248,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expression {id=252,slot_type=[aux_rule__arguments_5,expressionList,expression]}
            |           |       |   |           |       |___Token:"go" {id=267,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |       |   |           |       |___(*) {id=254,slot_type=kleene_star__expression_1}
            |           |       |   |           |           |___aux_rule__expression_2 {id=255,slot_type=aux_rule__expression_2}
            |           |       |   |           |               |___Token:+ {id=263,slot_type=[altnt_block__expression_3,PLUS]}
            |           |       |   |           |               |___Token:"lang" {id=262,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |       |   |           |___Token:) {id=249,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=236,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=186,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=194,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=232,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=196,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=228,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=229,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=230,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=199,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=200,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=201,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expressionList {id=204,slot_type=[aux_rule__arguments_5,expressionList]}
            |           |       |   |           |       |___Token:"1+1 =" {id=227,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |       |   |           |       |___(*) {id=206,slot_type=kleene_star__expressionList_2}
            |           |       |   |           |           |___aux_rule__expressionList_1 {id=207,slot_type=aux_rule__expressionList_1}
            |           |       |   |           |               |___Token:, {id=208,slot_type=COMMA}
            |           |       |   |           |               |___expression {id=209,slot_type=expression}
            |           |       |   |           |                   |___Token:1 {id=222,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,DECIMAL_LIT]}
            |           |       |   |           |                   |___(*) {id=211,slot_type=kleene_star__expression_1}
            |           |       |   |           |                       |___aux_rule__expression_2 {id=212,slot_type=aux_rule__expression_2}
            |           |       |   |           |                           |___Token:+ {id=219,slot_type=[altnt_block__expression_3,PLUS]}
            |           |       |   |           |                           |___Token:1 {id=218,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,DECIMAL_LIT]}
            |           |       |   |           |___Token:) {id=202,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=189,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=139,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=147,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=185,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=149,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=181,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=182,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=183,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=152,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=153,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=154,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expressionList {id=157,slot_type=[aux_rule__arguments_5,expressionList]}
            |           |       |   |           |       |___Token:"7.0/3.0 =" {id=180,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,string_,INTERPRETED_STRING_LIT]}
            |           |       |   |           |       |___(*) {id=159,slot_type=kleene_star__expressionList_2}
            |           |       |   |           |           |___aux_rule__expressionList_1 {id=160,slot_type=aux_rule__expressionList_1}
            |           |       |   |           |               |___Token:, {id=161,slot_type=COMMA}
            |           |       |   |           |               |___expression {id=162,slot_type=expression}
            |           |       |   |           |                   |___Token:7.0 {id=175,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,FLOAT_LIT]}
            |           |       |   |           |                   |___(*) {id=164,slot_type=kleene_star__expression_1}
            |           |       |   |           |                       |___aux_rule__expression_2 {id=165,slot_type=aux_rule__expression_2}
            |           |       |   |           |                           |___Token:/ {id=172,slot_type=[altnt_block__expression_3,DIV]}
            |           |       |   |           |                           |___Token:3.0 {id=171,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,FLOAT_LIT]}
            |           |       |   |           |___Token:) {id=155,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=142,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=99,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=107,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=138,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=109,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=134,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=135,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=136,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=112,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=113,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=114,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expression {id=118,slot_type=[aux_rule__arguments_5,expressionList,expression]}
            |           |       |   |           |       |___Token:true {id=133,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |           |       |___(*) {id=120,slot_type=kleene_star__expression_1}
            |           |       |   |           |           |___aux_rule__expression_2 {id=121,slot_type=aux_rule__expression_2}
            |           |       |   |           |               |___Token:&& {id=129,slot_type=[altnt_block__expression_3,LOGICAL_AND]}
            |           |       |   |           |               |___Token:false {id=128,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |           |___Token:) {id=115,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=102,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=59,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |       |   |___primaryExpr {id=67,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |       |   |   |___Token:fmt {id=98,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |   |___(*) {id=69,slot_type=kleene_star__primaryExpr_1}
            |           |       |   |       |___aux_rule__primaryExpr_4 {id=94,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |       |   |       |   |___Token:. {id=95,slot_type=DOT}
            |           |       |   |       |   |___Token:Println {id=96,slot_type=IDENTIFIER}
            |           |       |   |       |___arguments {id=72,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |       |   |           |___Token:( {id=73,slot_type=L_PAREN}
            |           |       |   |           |___(?) {id=74,slot_type=optional__arguments_6}
            |           |       |   |           |   |___expression {id=78,slot_type=[aux_rule__arguments_5,expressionList,expression]}
            |           |       |   |           |       |___Token:true {id=93,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |           |       |___(*) {id=80,slot_type=kleene_star__expression_1}
            |           |       |   |           |           |___aux_rule__expression_2 {id=81,slot_type=aux_rule__expression_2}
            |           |       |   |           |               |___Token:|| {id=89,slot_type=[altnt_block__expression_3,LOGICAL_OR]}
            |           |       |   |           |               |___Token:false {id=88,slot_type=[expression,unaryExpr,primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |       |   |           |___Token:) {id=75,slot_type=R_PAREN}
            |           |       |   |___Token:; {id=62,slot_type=[eos,SEMI]}
            |           |       |___aux_rule__statementList_2 {id=26,slot_type=[aux_rule__statementList_1,aux_rule__statementList_2]}
            |           |           |___primaryExpr {id=34,slot_type=[realStatement,realSimpleStmt,expressionStmt,expression,unaryExpr,primaryExpr]}
            |           |           |   |___Token:fmt {id=58,slot_type=[aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |           |   |___(*) {id=36,slot_type=kleene_star__primaryExpr_1}
            |           |           |       |___aux_rule__primaryExpr_4 {id=54,slot_type=[aux_rule__primaryExpr_2,aux_rule__primaryExpr_4]}
            |           |           |       |   |___Token:. {id=55,slot_type=DOT}
            |           |           |       |   |___Token:Println {id=56,slot_type=IDENTIFIER}
            |           |           |       |___arguments {id=39,slot_type=[aux_rule__primaryExpr_2,arguments]}
            |           |           |           |___Token:( {id=40,slot_type=L_PAREN}
            |           |           |           |___(?) {id=41,slot_type=optional__arguments_6}
            |           |           |           |   |___aux_rule__unaryExpr_1 {id=47,slot_type=[aux_rule__arguments_5,expressionList,expression,unaryExpr,aux_rule__unaryExpr_1]}
            |           |           |           |       |___Token:! {id=48,slot_type=EXCLAMATION}
            |           |           |           |       |___Token:true {id=53,slot_type=[unaryExpr,primaryExpr,aux_rule__primaryExpr_3,typeName,IDENTIFIER]}
            |           |           |           |___Token:) {id=42,slot_type=R_PAREN}
            |           |           |___Token:; {id=29,slot_type=[eos,SEMI]}
            |           |___Token:} {id=18,slot_type=R_CURLY}
            |___Token:; {id=10,slot_type=[eos,SEMI]}
------------------------------------------------------------


==================Reducing node 2, size=70==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 6, size=70==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    package main;
    import "fmt";
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


==================Reducing node 7, size=70==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=7}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


==================Reducing node 8, size=70==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 14, size=70==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    package main;
    import "fmt";
    func main()
     ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 14
------------------------------------------------------------


=================Reducing node 15, size=70==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=15}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 17, size=70==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    package main;
    import "fmt";
    func main() {
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 17
------------------------------------------------------------


=================Reducing node 19, size=70==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
        fmt.Println("1+1 =", 1+1);
        fmt.Println("7.0/3.0 =", 7.0/3.0);
        fmt.Println(true && false);
        fmt.Println(true || false);
        fmt.Println(!true);
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=19}
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus]remove whole except first
    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

0 entries are removed: 3 --> 3.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 4
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 19 from 70 to 22
------------------------------------------------------------


=================Reducing node 233, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 233
------------------------------------------------------------


=================Reducing node 241, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    package main;
    import "fmt";
    func main() {
            Println               ;
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    package main;
    import "fmt";
    func main() {
                    "go" + "lang" ;
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 241
------------------------------------------------------------


=================Reducing node 243, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    package main;
    import "fmt";
    func main() {
        fmt.Println               ;
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    package main;
    import "fmt";
    func main() {
        fmt        ("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 243
------------------------------------------------------------


=================Reducing node 246, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=246}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 246
------------------------------------------------------------


=================Reducing node 248, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    package main;
    import "fmt";
    func main() {
        fmt.Println(             );
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 248
------------------------------------------------------------


=================Reducing node 252, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=252}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    package main;
    import "fmt";
    func main() {
        fmt.Println(       "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 252
------------------------------------------------------------


==================Reducing node 5, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    package main;
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


=================Reducing node 276, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=276}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 276
------------------------------------------------------------


=================Reducing node 277, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 277
------------------------------------------------------------


=================Reducing node 273, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 273
------------------------------------------------------------


=================Reducing node 268, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=268}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 268
------------------------------------------------------------


=================Reducing node 254, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 254
------------------------------------------------------------


=================Reducing node 255, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=255}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 255
------------------------------------------------------------


==================Reducing node 3, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 3
------------------------------------------------------------


=================Reducing node 287, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 287
------------------------------------------------------------


=================Reducing node 286, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 286
------------------------------------------------------------


=================Reducing node 285, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 285
------------------------------------------------------------


=================Reducing node 284, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 284
------------------------------------------------------------


=================Reducing node 280, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 280
------------------------------------------------------------


=================Reducing node 279, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 279
------------------------------------------------------------


=================Reducing node 275, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 275
------------------------------------------------------------


=================Reducing node 274, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 274
------------------------------------------------------------


=================Reducing node 272, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 272
------------------------------------------------------------


=================Reducing node 270, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 270
------------------------------------------------------------


=================Reducing node 269, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 269
------------------------------------------------------------


=================Reducing node 267, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 267
------------------------------------------------------------


=================Reducing node 263, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 263
------------------------------------------------------------


=================Reducing node 262, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 262
------------------------------------------------------------


=================Reducing node 249, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 249
------------------------------------------------------------


=================Reducing node 247, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 247
------------------------------------------------------------


=================Reducing node 236, size=22=================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 236
------------------------------------------------------------


=================Reducing node 18, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 18
------------------------------------------------------------


=================Reducing node 16, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 12, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 11, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 10, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


==================Reducing node 2, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 6, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


==================Reducing node 7, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=7}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


==================Reducing node 8, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 14, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main()
     ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 14
------------------------------------------------------------


=================Reducing node 15, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=15}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 17, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 17
------------------------------------------------------------


=================Reducing node 19, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=19}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 21, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 21
------------------------------------------------------------


=================Reducing node 29, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
            Println               ;
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
                    "go" + "lang" ;
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 29
------------------------------------------------------------


=================Reducing node 31, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt                       ;
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt.Println               ;
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt        ("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 31
------------------------------------------------------------


=================Reducing node 34, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=34}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 34
------------------------------------------------------------


=================Reducing node 36, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt.Println(             );
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 36
------------------------------------------------------------


=================Reducing node 40, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=40}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt.Println(       "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 40
------------------------------------------------------------


==================Reducing node 5, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 5
------------------------------------------------------------


=================Reducing node 64, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=64}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 64
------------------------------------------------------------


=================Reducing node 65, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 65
------------------------------------------------------------


=================Reducing node 61, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 61
------------------------------------------------------------


=================Reducing node 56, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=56}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 56
------------------------------------------------------------


=================Reducing node 42, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    package main;
    import "fmt";
    func main() {
        fmt.Println("go"         );
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 42
------------------------------------------------------------


=================Reducing node 43, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=43}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 43
------------------------------------------------------------


==================Reducing node 3, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 3
------------------------------------------------------------


=================Reducing node 75, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 75
------------------------------------------------------------


=================Reducing node 74, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 74
------------------------------------------------------------


=================Reducing node 73, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 73
------------------------------------------------------------


=================Reducing node 72, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 72
------------------------------------------------------------


=================Reducing node 68, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 68
------------------------------------------------------------


=================Reducing node 67, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 67
------------------------------------------------------------


=================Reducing node 63, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 63
------------------------------------------------------------


=================Reducing node 62, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 62
------------------------------------------------------------


=================Reducing node 60, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 60
------------------------------------------------------------


=================Reducing node 58, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 58
------------------------------------------------------------


=================Reducing node 57, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 57
------------------------------------------------------------


=================Reducing node 55, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 55
------------------------------------------------------------


=================Reducing node 51, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 51
------------------------------------------------------------


=================Reducing node 50, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 50
------------------------------------------------------------


=================Reducing node 37, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 37
------------------------------------------------------------


=================Reducing node 35, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 35
------------------------------------------------------------


=================Reducing node 24, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 24
------------------------------------------------------------


=================Reducing node 18, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 18
------------------------------------------------------------


=================Reducing node 16, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 16
------------------------------------------------------------


=================Reducing node 12, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 11, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 10, size=22==================

The current best program is the following

    package main;
    import "fmt";
    func main() {
        fmt.Println("go" + "lang");
    };
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 10
------------------------------------------------------------


#test success = 1
#test failure = 12
#test result cache hits = 18
#test execution cancelled = 0
#node edit action set cache hits = 16
