======================Reduction starts======================

The spar tree is the following.
translationUnit {id=1}
|___(?) {id=2,slot_type=optional__translationUnit_1}
    |___(+) {id=3,slot_type=declarationseq}
        |___Token:#include <iostream> {id=211,slot_type=[declaration,IncludeDirective]}
        |___usingDirective {id=204,slot_type=[declaration,blockDeclaration,usingDirective]}
        |   |___Token:using {id=205,slot_type=Using}
        |   |___Token:namespace {id=206,slot_type=Namespace}
        |   |___Token:std {id=210,slot_type=[namespaceName,typedefName,Identifier]}
        |   |___Token:; {id=208,slot_type=Semi}
        |___functionDefinition {id=7,slot_type=[declaration,functionDefinition]}
            |___(?) {id=8,slot_type=optional__simpleDeclaration_1}
            |   |___(+) {id=194,slot_type=[declSpecifierSeq,kleene_plus__declSpecifierSeq_1]}
            |       |___Token:int {id=202,slot_type=[declSpecifier,typeSpecifier,trailingTypeSpecifier,simpleTypeSpecifier,aux_rule__simpleTypeSpecifier_15,altnt_block__simpleTypeSpecifier_11,aux_rule__simpleTypeSpecifier_16,Int]}
            |___noPointerDeclarator {id=126,slot_type=[declarator,pointerDeclarator,noPointerDeclarator]}
            |   |___Token:main {id=192,slot_type=[aux_rule__noPointerDeclarator_6,aux_rule__noPointerDeclarator_8,declaratorid,idExpression,unqualifiedId,Identifier]}
            |   |___(*) {id=128,slot_type=kleene_star__noPointerDeclarator_4}
            |       |___parametersAndQualifiers {id=130,slot_type=[aux_rule__noPointerDeclarator_5,parametersAndQualifiers]}
            |           |___Token:( {id=131,slot_type=LeftParen}
            |           |___(?) {id=132,slot_type=optional__lambdaDeclarator_1}
            |           |   |___parameterDeclarationList {id=135,slot_type=[parameterDeclarationClause,parameterDeclarationList]}
            |           |       |___parameterDeclaration {id=136,slot_type=parameterDeclaration}
            |           |       |   |___(+) {id=179,slot_type=[declSpecifierSeq,kleene_plus__declSpecifierSeq_1]}
            |           |       |   |   |___Token:int {id=187,slot_type=[declSpecifier,typeSpecifier,trailingTypeSpecifier,simpleTypeSpecifier,aux_rule__simpleTypeSpecifier_15,altnt_block__simpleTypeSpecifier_11,aux_rule__simpleTypeSpecifier_16,Int]}
            |           |       |   |___Token:argc {id=178,slot_type=[declarator,pointerDeclarator,noPointerDeclarator,aux_rule__noPointerDeclarator_6,aux_rule__noPointerDeclarator_8,declaratorid,idExpression,unqualifiedId,Identifier]}
            |           |       |___(*) {id=137,slot_type=kleene_star__parameterDeclarationList_2}
            |           |           |___aux_rule__parameterDeclarationList_1 {id=138,slot_type=aux_rule__parameterDeclarationList_1}
            |           |               |___Token:, {id=139,slot_type=Comma}
            |           |               |___parameterDeclaration {id=140,slot_type=parameterDeclaration}
            |           |                   |___(+) {id=161,slot_type=[declSpecifierSeq,kleene_plus__declSpecifierSeq_1]}
            |           |                   |   |___Token:char {id=168,slot_type=[declSpecifier,typeSpecifier,trailingTypeSpecifier,simpleTypeSpecifier,aux_rule__simpleTypeSpecifier_15,altnt_block__simpleTypeSpecifier_11,Char]}
            |           |                   |___pointerDeclarator {id=143,slot_type=[declarator,pointerDeclarator]}
            |           |                       |___(*) {id=144,slot_type=kleene_star__pointerDeclarator_3}
            |           |                       |   |___Token:* {id=160,slot_type=[aux_rule__pointerDeclarator_2,pointerOperator,aux_rule__pointerOperator_6,Star]}
            |           |                       |___noPointerDeclarator {id=145,slot_type=noPointerDeclarator}
            |           |                           |___Token:argv {id=156,slot_type=[aux_rule__noPointerDeclarator_6,aux_rule__noPointerDeclarator_8,declaratorid,idExpression,unqualifiedId,Identifier]}
            |           |                           |___(*) {id=147,slot_type=kleene_star__noPointerDeclarator_4}
            |           |                               |___aux_rule__noPointerDeclarator_7 {id=149,slot_type=[aux_rule__noPointerDeclarator_5,aux_rule__noPointerDeclarator_7]}
            |           |                                   |___Token:[ {id=150,slot_type=LeftBracket}
            |           |                                   |___Token:] {id=151,slot_type=RightBracket}
            |           |___Token:) {id=133,slot_type=RightParen}
            |___compoundStatement {id=12,slot_type=[functionBody,aux_rule__functionBody_2,compoundStatement]}
                |___Token:{ {id=13,slot_type=LeftBrace}
                |___(?) {id=14,slot_type=optional__compoundStatement_1}
                |   |___(+) {id=16,slot_type=statementSeq}
                |       |___expressionStatement {id=47,slot_type=[statement,aux_rule__statement_2,expressionStatement]}
                |       |   |___(?) {id=48,slot_type=optional__expressionStatement_1}
                |       |   |   |___shiftExpression {id=60,slot_type=[expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression]}
                |       |   |       |___qualifiedId {id=115,slot_type=[additiveExpression,multiplicativeExpression,pointerMemberExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_6,idExpression,qualifiedId]}
                |       |   |       |   |___nestedNameSpecifier {id=116,slot_type=nestedNameSpecifier}
                |       |   |       |   |   |___(?) {id=119,slot_type=optional__nestedNameSpecifier_2}
                |       |   |       |   |   |   |___Token:std {id=124,slot_type=[aux_rule__nestedNameSpecifier_1,theTypeName,className,Identifier]}
                |       |   |       |   |   |___Token::: {id=120,slot_type=Doublecolon}
                |       |   |       |   |___Token:cout {id=118,slot_type=[unqualifiedId,Identifier]}
                |       |   |       |___(*) {id=62,slot_type=kleene_star__shiftExpression_2}
                |       |   |           |___aux_rule__shiftExpression_1 {id=63,slot_type=aux_rule__shiftExpression_1}
                |       |   |           |   |___aux_rule__shiftOperator_2 {id=105,slot_type=[shiftOperator,aux_rule__shiftOperator_2]}
                |       |   |           |   |   |___Token:< {id=106,slot_type=Less}
                |       |   |           |   |   |___Token:< {id=107,slot_type=Less}
                |       |   |           |   |___(+) {id=102,slot_type=[additiveExpression,multiplicativeExpression,pointerMemberExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_6,kleene_plus__primaryExpression_1]}
                |       |   |           |       |___Token:"not-interesting " {id=104,slot_type=[literal,StringLiteral]}
                |       |   |           |___aux_rule__shiftExpression_1 {id=64,slot_type=aux_rule__shiftExpression_1}
                |       |   |           |   |___aux_rule__shiftOperator_2 {id=91,slot_type=[shiftOperator,aux_rule__shiftOperator_2]}
                |       |   |           |   |   |___Token:< {id=92,slot_type=Less}
                |       |   |           |   |   |___Token:< {id=93,slot_type=Less}
                |       |   |           |   |___(+) {id=88,slot_type=[additiveExpression,multiplicativeExpression,pointerMemberExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_6,kleene_plus__primaryExpression_1]}
                |       |   |           |       |___Token:"hello world" {id=90,slot_type=[literal,StringLiteral]}
                |       |   |           |___aux_rule__shiftExpression_1 {id=65,slot_type=aux_rule__shiftExpression_1}
                |       |   |               |___aux_rule__shiftOperator_2 {id=77,slot_type=[shiftOperator,aux_rule__shiftOperator_2]}
                |       |   |               |   |___Token:< {id=78,slot_type=Less}
                |       |   |               |   |___Token:< {id=79,slot_type=Less}
                |       |   |               |___(+) {id=74,slot_type=[additiveExpression,multiplicativeExpression,pointerMemberExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_6,kleene_plus__primaryExpression_1]}
                |       |   |                   |___Token:"\n" {id=76,slot_type=[literal,StringLiteral]}
                |       |   |___Token:; {id=49,slot_type=Semi}
                |       |___jumpStatement {id=20,slot_type=[statement,aux_rule__statement_2,jumpStatement]}
                |           |___Token:return {id=21,slot_type=Return}
                |           |___(?) {id=22,slot_type=optional__jumpStatement_2}
                |           |   |___(+) {id=43,slot_type=[aux_rule__jumpStatement_1,expression,assignmentExpression,conditionalExpression,logicalOrExpression,logicalAndExpression,inclusiveOrExpression,exclusiveOrExpression,andExpression,equalityExpression,relationalExpression,shiftExpression,additiveExpression,multiplicativeExpression,pointerMemberExpression,castExpression,unaryExpression,postfixExpression,aux_rule__postfixExpression_6,kleene_plus__primaryExpression_1]}
                |           |       |___Token:0 {id=45,slot_type=[literal,IntegerLiteral]}
                |           |___Token:; {id=23,slot_type=Semi}
                |___Token:} {id=15,slot_type=RightBrace}
------------------------------------------------------------


==================Reducing node 2, size=35==================

The current best program is the following

    #include <iostream>
    using namespace std;
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
        return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 3, size=35==================

The current best program is the following

    #include <iostream>
    using namespace std;
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
        return 0;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=3}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]remove whole except first
    #include <iostream>
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    #include <iostream>
    using namespace std;
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@2
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
        return 0;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus]dd@1
    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
        return 0;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 4 --> 3.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 5
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
        return 0;
    }
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 3 from 35 to 31
------------------------------------------------------------


==================Reducing node 7, size=31==================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
        return 0;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
                                                                ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


=================Reducing node 12, size=31==================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
        return 0;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


=================Reducing node 14, size=31==================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
        return 0;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    #include <iostream>
    int main (int argc, char *argv[]) {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 14
------------------------------------------------------------


=================Reducing node 16, size=31==================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
        return 0;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=16}
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_plus]remove whole except first
    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

1 entries are removed: 5 --> 4.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 6
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 16 from 31 to 28
------------------------------------------------------------


=================Reducing node 47, size=28==================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (int argc, char *argv[]) {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (int argc, char *argv[]) {
                                                                ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 47
------------------------------------------------------------


=================Reducing node 48, size=28==================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (int argc, char *argv[]) {
                                                                ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 48
------------------------------------------------------------


=================Reducing node 60, size=28==================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=60}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (int argc, char *argv[]) {
                     "not-interesting "                         ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (int argc, char *argv[]) {
                                           "hello world"        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (int argc, char *argv[]) {
                                                            "\n";
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout                                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 60
------------------------------------------------------------


=================Reducing node 126, size=28=================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main                          {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 126
------------------------------------------------------------


=================Reducing node 128, size=28=================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main                          {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 128
------------------------------------------------------------


=================Reducing node 130, size=28=================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=130}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 130
------------------------------------------------------------


=================Reducing node 62, size=28==================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world" << "\n";
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout                                               ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star]dd@1
    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting " << "hello world"        ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 10 --> 8.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 11
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout                                               ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout << "not-interesting "                         ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star]dd@1
    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

2 entries are removed: 9 --> 7.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 3
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 62 from 28 to 22
------------------------------------------------------------


=================Reducing node 132, size=22=================

The current best program is the following

    #include <iostream>
    int main (int argc, char *argv[]) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


============Testing the following program: pass=============

// edit action set type: [kleene_star]dd@1
    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===========TestScriptExecutionCacheEntryEviction============

4 entries are removed: 7 --> 3.
------------------------------------------------------------


===========Node edit action set cache is cleared.===========

    size before clearance = 1
------------------------------------------------------------


===================Node reduction is done===================

Succeeded to reduce node 132 from 22 to 14
------------------------------------------------------------


=================Reducing node 115, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (                      ) {
             cout                       << "hello world"        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (                      ) {
        std                             << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 115
------------------------------------------------------------


=================Reducing node 64, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular_node]can be epsilon
    #include <iostream>
    int main (                      ) {
        std::cout                                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 64
------------------------------------------------------------


=================Reducing node 116, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (                      ) {
           ::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 116
------------------------------------------------------------


=================Reducing node 91, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 91
------------------------------------------------------------


=================Reducing node 211, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 211
------------------------------------------------------------


=================Reducing node 192, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 192
------------------------------------------------------------


=================Reducing node 133, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 133
------------------------------------------------------------


=================Reducing node 131, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 131
------------------------------------------------------------


=================Reducing node 120, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 120
------------------------------------------------------------


=================Reducing node 119, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (                      ) {
           ::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 119
------------------------------------------------------------


=================Reducing node 124, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 124
------------------------------------------------------------


=================Reducing node 118, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 118
------------------------------------------------------------


=================Reducing node 93, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 93
------------------------------------------------------------


=================Reducing node 92, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 92
------------------------------------------------------------


=================Reducing node 88, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 88
------------------------------------------------------------


=================Reducing node 90, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 90
------------------------------------------------------------


=================Reducing node 49, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 49
------------------------------------------------------------


=================Reducing node 15, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 13, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


==================Reducing node 8, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    #include <iostream>
        main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 8
------------------------------------------------------------


=================Reducing node 194, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=194}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 194
------------------------------------------------------------


=================Reducing node 202, size=14=================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 202
------------------------------------------------------------


==================Reducing node 2, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 2
------------------------------------------------------------


==================Reducing node 3, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=3}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=6}
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_plus]dd@1
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 3
------------------------------------------------------------


==================Reducing node 6, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=6}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
                                                                ;
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 6
------------------------------------------------------------


=================Reducing node 11, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 11
------------------------------------------------------------


=================Reducing node 13, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [kleene_star]dd@1
    #include <iostream>
    int main (                      ) {
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 13
------------------------------------------------------------


=================Reducing node 15, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=15}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 15
------------------------------------------------------------


=================Reducing node 18, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (                      ) {
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (                      ) {
                                                                ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 18
------------------------------------------------------------


=================Reducing node 19, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (                      ) {
                                                                ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 19
------------------------------------------------------------


=================Reducing node 31, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=31}
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (                      ) {
        std::cout                                               ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main (                      ) {
                                           "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 31
------------------------------------------------------------


=================Reducing node 67, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


============Testing the following program: fail=============

// edit action set type: [regular node]compatible replacement
    #include <iostream>
    int main                          {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 67
------------------------------------------------------------


=================Reducing node 56, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (                      ) {
             cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (                      ) {
        std                             << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 56
------------------------------------------------------------


=================Reducing node 33, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (                      ) {
        std::cout                                               ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 33
------------------------------------------------------------


=================Reducing node 34, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=34}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 34
------------------------------------------------------------


=================Reducing node 69, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main                          {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 69
------------------------------------------------------------


=================Reducing node 71, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=71}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 71
------------------------------------------------------------


=================Reducing node 57, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (                      ) {
           ::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 57
------------------------------------------------------------


=================Reducing node 46, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 46
------------------------------------------------------------


=================Reducing node 89, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 89
------------------------------------------------------------


=================Reducing node 78, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 78
------------------------------------------------------------


=================Reducing node 73, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 73
------------------------------------------------------------


=================Reducing node 72, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 72
------------------------------------------------------------


=================Reducing node 61, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 61
------------------------------------------------------------


=================Reducing node 60, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
    int main (                      ) {
           ::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 60
------------------------------------------------------------


=================Reducing node 65, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 65
------------------------------------------------------------


=================Reducing node 59, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 59
------------------------------------------------------------


=================Reducing node 48, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 48
------------------------------------------------------------


=================Reducing node 47, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 47
------------------------------------------------------------


=================Reducing node 43, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 43
------------------------------------------------------------


=================Reducing node 45, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 45
------------------------------------------------------------


=================Reducing node 20, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 20
------------------------------------------------------------


=================Reducing node 14, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 14
------------------------------------------------------------


=================Reducing node 12, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 12
------------------------------------------------------------


==================Reducing node 7, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


=========Cache hit for the following program: fail==========

    #include <iostream>
        main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 7
------------------------------------------------------------


=================Reducing node 80, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


==============Node edit action set cache hit.===============

    NodeDeletionAction{target_node=80}
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 80
------------------------------------------------------------


=================Reducing node 88, size=14==================

The current best program is the following

    #include <iostream>
    int main (                      ) {
        std::cout                       << "hello world"        ;
    }
------------------------------------------------------------


===================Node reduction is done===================

Failed to reduce node 88
------------------------------------------------------------


#test success = 5
#test failure = 23
#test result cache hits = 21
#test execution cancelled = 0
#node edit action set cache hits = 13
